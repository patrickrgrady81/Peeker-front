{"version":3,"sources":["components/card/Card.js","components/table/js/card.js","components/table/js/deck.js","components/table/Table.js","components/odds/Odds.js","components/payouts/Payouts.js","components/credits/Credits.js","components/currentHand/CurrentHand.js","components/bestPlays/BestPlays.js","components/app/App.js","serviceWorker.js","index.js"],"names":["Card","props","componentDidUpdate","gameState","state","held","setState","showCards","cardImage","className","src","alt","onClick","holdButton","key","id","card","image","class","this","Component","CardJS","v","s","i","toLowerCase","DeckJS","cards","suits","vals","intVals","length","j","push","pickACard","Math","floor","random","Table","minmaxClicked","bet","a","updateBet","play","start","deck","aDeck","createDeck","shuffleDeck","theCard","hand","sendHand","axios","request","url","method","headers","data","response","handValue","payout","odds","updateOdds","console","log","updateHandValue","updateCredits","updatePayout","inject","injectTheseCards","getCards","injectCards","updateGameState","getNewHand","newDeck","pHand","slice","newHand","newCard","splice","hands","totalHands","sprintf","Odds","getOdds","show","map","payTable","Payouts","getClassName","cols","Credits","minus","plus","credits","readOnly","type","value","CurrentHand","payMessage","BestPlays","App","change","intHandValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.739024ac.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Card.css'\n\n\nexport default class Card extends Component { \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      held: false,\n      class: \"card-btn\"\n    }\n  }\n\n  componentDidUpdate = () => { \n    if (this.props.gameState === \"DEAL\") {\n      if (this.state.held) {\n        this.setState({ held: false });\n      }\n    //   if (this.state.class === \"card-btn\") {\n    //     this.setState({ class: \"none\" });\n    //   }\n    // } else if (this.props.gameState === \"DRAW\") { \n    //   if (this.state.class === \"hide\") {\n    //     this.setState({ class: \"card-btn\" });\n    //   }\n    }\n  }\n\n  render() { \n    return (\n      <div>\n        {this.showCards()}\n      </div>\n    )\n  }\n\n  showCards = () => {\n    let cardImage;\n    if (this.props.gameState === \"START\") {\n      cardImage = '/img/cards/blue_back.png';\n      return (\n        <div className=\"cardWrapper\">\n          <img className=\"card\" src={cardImage} alt=\"card\"></img>\n          <button onClick={this.holdButton} key={null} id={null} className={this.state.class}>READY</button>\n        </div>\n      )\n    } else { \n      cardImage = this.props.card.image;\n      return (\n        <div className=\"cardWrapper\">\n          <img className=\"card\" src={cardImage} alt=\"card\"></img>\n          <button onClick={this.holdButton} key={this.props.card.id} id={this.props.card.id} className={this.state.class}>{this.state.held ? \"HOLDING\" : \"HOLD\"}</button>\n        </div>\n      )\n    }\n  }\n\n  holdButton = () => {\n    if (this.props.gameState !== \"DRAW\") return;\n      this.props.card.held = !this.props.card.held\n      this.setState(state => {\n        return {\n          held: !this.state.held\n        }\n      });\n  }\n}","export default class CardJS { \n  constructor(v, s, i) { \n    this.v = v;\n    this.s = s;\n    this.i = i;\n    this.image = `img/cards/${this.v}${this.s}.png`;\n    this.id = `${this.v.toLowerCase()}${this.s.toLowerCase()}`;\n    this.held = false;\n  }\n}","import CardJS from \"./card.js\"\n\nexport default class DeckJS {\n  createDeck() {\n    const cards = []\n    const suits = ['H', 'D', 'C', 'S'];\n    const vals = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'];\n    const intVals = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n\n    for (let i = 0; i < suits.length; i++) {\n      for (let j = 0; j < vals.length; j++) {\n        cards.push(new CardJS(vals[j], suits[i], intVals[j]));\n      }\n    }\n    return cards\n  }\n\n  shuffleDeck(cards) {\n    for (let i = 0; i < cards.length; i++) {\n      let pickACard = Math.floor(Math.random() * (cards.length));\n      [cards[i], cards[pickACard]] = [cards[pickACard], cards[i]];\n    }\n  }\n}","import axios from 'axios';\nimport React, { Component } from 'react'\nimport Card from \"../card/Card\";\nimport DeckJS from \"./js/deck.js\"\nimport CardJS from \"./js/card.js\"\n\nexport default class Table extends Component { \n  constructor() { \n    super();\n\n    const newDeck = this.start()\n        \n    this.state = {\n      deck: newDeck,\n      hand: []\n    };\n\n    this.injectCards = false;\n  }\n\n  render() { \n    return (\n      <div className=\"wrapper table\">\n        <ul className=\"noBullet cards\">\n          {this.showCards()}\n        </ul>\n        <div className=\"buttonDiv\">\n          <button className=\"draw-btn\" onClick={() => { this.minmaxClicked(1) }}>BET ONE</button>\n          <button className=\"draw-btn\" onClick={this.play}>{this.props.gameState}</button>\n          <button className=\"draw-btn\" onClick={() => { this.minmaxClicked(5) }}>BET MAX</button>\n        </div>\n      </div>\n    );\n  }\n\n  minmaxClicked = async (bet) => { \n    if (this.props.gameState !== \"DRAW\") {\n      await this.props.updateBet(bet);\n      this.play();\n    }\n  }\n\n  start = () => { \n    let deck = new DeckJS();\n    let aDeck = deck.createDeck();\n    deck.shuffleDeck(aDeck);\n    return aDeck;\n  }\n\n  showCards = () => {\n    let cards = [];\n    let theCard;\n    \n    for (let i = 0; i < 5; i++) {\n      this.state.hand[i] ? theCard = this.state.hand[i] : theCard = null;\n      cards.push(<li key={i}><Card card={theCard} gameState={this.props.gameState} /></li>);\n    }\n    return cards\n  }\n\n  sendHand = async () => { \n    const response = await axios.request({\n      url: 'http://localhost:3001/api/v1/send',\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      data: {\n        hand: this.state.hand,\n        deck: this.state.deck,\n        gameState: this.props.gameState,\n        bet: this.props.bet\n      }\n    })\n    const hand = response.data.handValue;\n    const payout = response.data.payout;\n    if (response.data.odds) {\n      const odds = response.data.odds;\n      await this.props.updateOdds(odds);\n      console.log(odds);\n    }\n    await this.props.updateHandValue(hand);\n    await this.props.updateCredits(payout);\n    await this.props.updatePayout(payout);\n  }\n\n  inject = () => { \n    const injectTheseCards = [\n      new CardJS(\"A\", \"S\", 1),\n      new CardJS(\"K\", \"S\", 13),\n      new CardJS(\"Q\", \"S\", 12),\n      new CardJS(\"J\", \"S\", 11),\n      new CardJS(\"T\", \"S\", 10),\n    ];\n    this.setState({hand: injectTheseCards});\n  }\n\n  play = async () => {\n    if (this.props.gameState === \"START\" || this.props.gameState === \"DEAL\") {\n      await this.getCards();\n      if (this.injectCards) { \n        this.inject();\n      }\n      await this.props.updateGameState(\"DRAW\");\n    } else {\n      await this.getNewHand();\n      await this.props.updateOdds([0]);\n      if (this.injectCards) { \n        this.inject();\n      }\n      await this.props.updateGameState(\"DEAL\");\n    }\n    \n    this.sendHand();\n    \n  }\n\n  getCards = async () => { \n    this.props.updateCredits(-this.props.bet);\n\n    let newDeck = this.start();\n\n    // player's hand is the first 5 cards in the deck\n    let pHand = newDeck.slice(0, 5);\n    for (let card of pHand) { \n      card.held = false;\n    }\n\n    // the deck with first 5 cards removed\n    newDeck = newDeck.slice(5);\n\n    this.setState(state => {\n      return {\n        deck: newDeck,\n        hand: pHand,\n      }\n    });\n  }\n\n  getNewHand = async () => { \n    let newHand = [...this.state.hand];\n    let newDeck = [...this.state.deck];\n\n    for (let i = 0; i < newHand.length; i++) {\n      if (!newHand[i].held) {\n        let newCard = newDeck[i];\n        newHand.splice(i, 1, newCard);\n      }\n    }\n\n    this.setState(state => {\n      return {\n        deck: newDeck,\n        hand: newHand,\n      }\n    });\n  }\n}","import React, { Component } from 'react'\nimport { sprintf } from 'sprintf-js'\n\n\nconst hands = [\"Royal Flush\", \"Straight Flush\", \"Four of a Kind\", \"Full House\",\n  \"Flush\", \"Straight\", \"Three of a Kind\", \"Two Pair\", \"Jacks or Better\"];\n\n\nconst totalHands =  1661102543100.0\nconst odds = [\n  0,\n  sprintf( \"%1.6f\", (41126022.0 / totalHands) * 100),\n  sprintf( \"%1.6f\", (181573608.0 / totalHands) * 100),\n  sprintf( \"%1.6f\", (3924430647.0 / totalHands) * 100),\n  sprintf( \"%1.6f\", (19122956883.0 / totalHands) * 100),\n  sprintf( \"%1.6f\", (18296232180.0 / totalHands) * 100),\n  sprintf( \"%1.6f\", (18653130482.0 / totalHands) * 100),\n  sprintf( \"%1.6f\", (123666922527.0 / totalHands) * 100),\n  sprintf( \"%1.6f\", (214745513679.0 / totalHands) * 100),\n  sprintf( \"%1.6f\", (356447740914.0 / totalHands) * 100)\n]\n\n\nexport default class Odds extends Component {\n  render() { \n    return (\n      <div className=\"odds\">\n        <h3 className=\"oddsHead\">Odds</h3>\n        {hands.map((hand, i) => (\n          <p key={i} className=\"odd\">{`${hand} = ${this.getOdds(i+1)}%`}</p>\n        ))}\n      </div>\n    )\n  }\n\n  getOdds = (i) => { \n    if (this.props.odds[0] > 0) {\n      return this.props.odds[i];\n    } else { \n      return odds[i];\n    }\n\n  }\n\n  show = () => { \n    return (\n      <div>\n        {hands.map((hand, i) => (\n          <p key={i} className=\"hand\">{hand}{\" = \"}</p>\n        ))}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\n\nconst payTable =\n  [\n    [\"Credits\", \"Royal Flush\", \"Straight Flush\", \"Four of a Kind\", \"Full House\",\n      \"Flush\", \"Straight\", \"Three of a Kind\", \"Two Pair\", \"Jacks or Better\"],\n    [1, 250, 50, 25, 9, 6, 4, 3, 2, 1],\n    [2, 500, 100, 50, 18, 12, 8, 6, 4, 2],\n    [3, 750, 150, 75, 27, 18, 12, 9, 6, 3],\n    [4, 1000, 200, 100, 36, 24, 16, 12, 8, 4],\n    [5, 4000, 250, 125, 45, 30, 20, 15, 10, 5]\n  ];\n\nexport default class Payouts extends Component {\n\n  render() {\n    return (\n      <div className=\"payouts\">\n        <h3 className=\"paytable\">Pay Table</h3>\n        <table className=\"pay\">\n          <thead>\n            <tr>\n            {payTable.map((cols, i) => (\n              <th key={i} className={this.getClassName(i)}>{cols[0]}</th>\n            ))}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n            {payTable.map((cols, i) => (\n              <td key={i} className={this.getClassName(i)}>{cols[1]}</td>\n            ))}\n            </tr>\n            <tr>\n              {payTable.map((cols, i) => (\n                <td key={i} className={this.getClassName(i)}>{cols[2]}</td>\n            ))}\n            </tr>\n            <tr>\n            {payTable.map((cols, i) => (\n              <td key={i} className={this.getClassName(i)}>{cols[3]}</td>\n            ))}\n            </tr>\n            <tr>\n            {payTable.map((cols, i) => (\n              <td key={i} className={this.getClassName(i)}>{cols[4]}</td>\n            ))}\n            </tr>\n            <tr>\n            {payTable.map((cols, i) => (\n              <td key={i} className={this.getClassName(i)}>{cols[5]}</td>\n            ))}\n            </tr>\n            <tr>\n            {payTable.map((cols, i) => (\n              <td key={i} className={this.getClassName(i)}>{cols[6]}</td>\n            ))}\n            </tr>\n            <tr>\n            {payTable.map((cols, i) => (\n              <td key={i} className={this.getClassName(i)}>{cols[7]}</td>\n            ))}\n            </tr>\n            <tr>\n            {payTable.map((cols, i) => (\n              <td key={i} className={this.getClassName(i)}>{cols[8]}</td>\n            ))}\n            </tr>\n            <tr>\n            {payTable.map((cols, i) => (\n              <td key={i} className={this.getClassName(i)}>{cols[9]}</td>\n            ))}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  getClassName = (i) => { \n    return i === this.props.bet ? \"active\" : \"payTableCol\"\n  }\n\n  showPayTable() { \n\n  }\n}","import React, { Component } from 'react'\n\nexport default class Credits extends Component {\n\n  render() { \n    return (\n      <div className=\"credits\">\n        <h1 className=\"credits-header\">Credits: {this.props.credits}</h1>\n        <h2 className=\"bet\">Current Bet</h2>\n        <div className=\"betGroup\">\n          <button className=\"bordered\" onClick={this.minus}>-</button>\n          <input readOnly type=\"text\" className=\"bordered\" value={this.props.bet}></input>\n          <button className=\"bordered\" onClick={this.plus}>+</button>\n        </div>\n      </div>\n    )\n  }\n\n  minus = () => { \n    if (this.props.bet > 1) {\n      this.props.updateBet(this.props.bet - 1);\n    }\n  }\n\n  plus = () => { \n    if (this.props.bet < 5) {\n      this.props.updateBet(this.props.bet + 1);\n    }\n  }\n}","import React, { Component } from 'react'\n\nexport default class CurrentHand extends Component {\n  render() {\n    let payMessage;\n    if (this.props.gameState === \"DEAL\") { \n    if (this.props.payout > 0) {\n        payMessage = `You Win ${this.props.payout} Credits`\n      } else {\n        payMessage = \"Nice Try, Please Play Again\"\n      }\n    }\n    return (\n      <div className=\"currentHand\">\n        <h1 className=\"hand\">{this.props.handValue}</h1>{\"\\n\"}\n        <h1 className=\"payMsg\">{payMessage}</h1>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\n\nexport default class BestPlays extends Component {\n  render() { \n    return (\n      <div className=\"bestPlays\">\n        {/* <h1>BestPlays Component</h1> */}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport '../card/Card.css';\nimport '../table/Table.css';\nimport '../odds/Odds.css';\nimport '../payouts/Payouts.css';\nimport '../credits/Credits.css';\nimport '../currentHand/CurrentHand.css';\nimport '../bestPlays/BestPlays.css';\nimport Table from '../table/Table.js';\nimport Odds from '../odds/Odds.js';\nimport Payouts from '../payouts/Payouts.js';\nimport Credits from '../credits/Credits.js';\nimport CurrentHand from '../currentHand/CurrentHand.js';\nimport BestPlays from '../bestPlays/BestPlays.js';\n\nexport default class App extends Component {\n  constructor() { \n    super();\n\n    this.state = { \n      credits: 100,\n      bet: 1,\n      gameState: \"START\",\n      handValue: \"\",\n      intHandValue: 0,\n      payout: 0,\n      odds: [0]\n    }\n  }\n  render() { \n    return (\n      <div>\n        <h2 className=\"peeker\">Peeker</h2>\n        <div className=\"comWrapper\">\n          <Odds className=\"o\" odds= {this.state.odds}/>\n          <Table className=\"t\" credits={this.state.credits} bet={this.state.bet} gameState={this.state.gameState}\n                                updateCredits={this.updateCredits}\n                                updateBet={this.updateBet}\n                                updateGameState={this.updateGameState}\n                                updateHandValue={this.updateHandValue}\n                                updatePayout={this.updatePayout}\n                                updateOdds={this.updateOdds}/>\n\n          <Payouts className=\"p\" bet={this.state.bet}/>\n          <Credits className=\"c\" credits={this.state.credits} bet={this.state.bet}\n                                updateCredits={this.updateCredits}\n                                updateBet={this.updateBet} />\n          <CurrentHand className=\"ch\" handValue={this.state.handValue} payout={this.state.payout} gameState={this.state.gameState}/>\n          <BestPlays className=\"bp\"/>\n        </div>\n      </div>\n    );\n  }\n\n  updateCredits = (change) => {\n    this.setState({credits: this.state.credits + change});\n  }\n\n  updateBet = (bet) => {\n    this.setState({bet});\n  }\n\n  updateGameState = (gameState) => {\n    this.setState({gameState});\n  }\n\n  updateHandValue = (handValue) => { \n    this.setState({handValue});\n  }\n\n  updatePayout = (payout) => { \n    this.setState({payout});\n  }\n\n  updateOdds = (odds) => { \n    this.setState({odds});\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}